% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{process_stan_data_indexing}
\alias{process_stan_data_indexing}
\title{Process Stan Data Indexing}
\usage{
process_stan_data_indexing(SubjectID_orig_R, SampleID_orig_R, y_R)
}
\arguments{
\item{SubjectID_orig_R}{A \code{character} vector containing subject identifiers.
Each element represents the subject ID for the corresponding observation.}

\item{SampleID_orig_R}{An \code{integer} vector containing sample identifiers within
each subject. Must be positive \code{integer}s (1-based indexing).}

\item{y_R}{A numeric vector containing the response variable observations.
This is passed through unchanged but must match the length of other inputs.}
}
\value{
A named list containing the following components for Stan model use:
\describe{
  \item{N_obs}{\code{integer}: Total number of observations}
  \item{y}{Numeric vector: Response variable (passed through unchanged)}
  \item{N_subj}{\code{integer}: Total number of unique subjects}
  \item{subj_idx}{\code{integer} vector: Subject index for each observation (1-based)}
  \item{N_samp_total}{\code{integer}: Total number of samples across all subjects}
  \item{samp_idx}{\code{integer} vector: Global sample index for each observation}
  \item{sample_to_subj_map}{\code{integer} vector: Maps global sample indices to subject indices}
}
}
\description{
This function processes subject and sample data to create the necessary indexing
structures for hierarchical Bayesian models in Stan. It converts character-based
subject IDs to numeric indices and creates comprehensive mapping structures for
efficient Stan model execution.
}
\details{
The function performs several key transformations:
\itemize{
  \item Converts \code{character} subject IDs to consecutive numeric indices (1 to N_subj)
  \item Calculates the maximum number of samples per subject
  \item Creates global sample indexing that accounts for varying samples per subject
  \item Generates a mapping from global sample indices back to subject indices
}

All input vectors must have identical lengths. The function includes comprehensive
error checking for empty data, mismatched vector lengths, and invalid sample IDs.
Sample IDs must be positive \code{integer}s starting from 1.
}
\examples{
\dontrun{
# Example with 3 subjects and varying samples per subject
subjects <- c("A", "A", "B", "B", "B", "C")
samples <- c(1, 2, 1, 2, 3, 1)
responses <- c(1.2, 1.5, 2.1, 2.3, 2.0, 0.8)

result <- process_stan_data_indexing(subjects, samples, responses)
print(result)
}

}
\seealso{
This function is designed for use with Stan models that require hierarchical
indexing structures for subjects and samples.
}
