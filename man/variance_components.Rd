% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{variance_components}
\alias{variance_components}
\title{Estimate Variance Components and Confidence Intervals via ANOVA}
\usage{
variance_components(
  data,
  output_type = "sigma",
  mult = 1,
  level = 0.95,
  cv_anova = FALSE
)
}
\arguments{
\item{data}{A \code{list} or \code{data.frame} containing the data for the ANOVA.
It must contain columns for subject identifiers and measurement values. This
is passed to an internal ANOVA function (`bv_anova`).}

\item{output_type}{A \code{character} string specifying the type of output to return.
Must be one of the following:
\describe{
  {\code{"sigma"}}{Returns point estimates of the standard deviations (\code{sigma}).}
  {\code{"cv"}}{Returns point estimates of the coefficients of variation (CV), calculated as sigma / grand_mean.}
  {\code{"sigma_ci"}}{Returns point estimates and confidence intervals for the standard deviations.}
  {\code{"cv_ci"}}{Returns point estimates and confidence intervals for the CVs.}
}
Defaults to \code{"sigma"}.}

\item{mult}{A \code{double} used as a scaling factor for the final output. For
example, set to 100 to express CVs as percentages. Defaults to 1.0.}

\item{level}{A \code{double} specifying the confidence level for the confidence
intervals (e.g., 0.95 for a 95\% CI). Defaults to 0.95.}

\item{cv_anova}{A \code{bool}. If \code{TRUE}, the underlying ANOVA is performed on
subject-specific coefficients of variation rather than on the raw
measurement values. Defaults to \code{FALSE}.}
}
\value{
A \code{list} containing the estimated components. The structure of
  the first three elements depends on \code{output_type}.
  \describe{
    \item{\code{sigma_A}}{Analytical/residual component. A single \code{double} for point
      estimates, or a 3-element \code{NumericVector} (estimate, lower CI, upper CI) for CIs.}
    \item{\code{sigma_I}}{Within-subject component. A single \code{double} or a 3-element \code{NumericVector}.}
    \item{\code{sigma_G}}{Between-subject component. A single \code{double} or a 3-element \code{NumericVector}.}
    \item{\code{sigma_i}}{A \code{NumericVector} of point estimates for the subject-specific within-subject standard deviation.}
    \item{\code{sigma_a}}{A \code{NumericVector} of point estimates for the subject-specific analytical standard deviation.}
    \item{\code{HBHR}}{A \code{double} representing the Heterogeneity of the Biological Homeostatic Ratio.}
  }
}
\description{
This function performs a three-level nested ANOVA to estimate variance
components. It can return point estimates of standard deviations (sigmas),
coefficients of variation (CVs), or confidence intervals for these metrics.
}
\details{
The function is built on a three-level nested random-effects model, which
decomposes the total variance into three components:
\itemize{
  \item \strong{\code{sigma_G}}: The top-level, between-subject standard deviation.
  \item \strong{\code{sigma_I}}: The intermediate-level, within-subject standard deviation.
  \item \strong{\code{sigma_A}}: The lowest-level, within-replicate (analytical or residual) standard deviation.
}
Point estimates for these components are derived from the mean squares of the
ANOVA. Confidence intervals are also computed. The CI for the residual variance
(\code{sigma_A}) is based on the chi-squared distribution. For the higher-level
components (\code{sigma_I} and \code{sigma_G}), more complex approximate methods
(generalized confidence intervals) are used, which are suitable for unbalanced data.
The function also returns subject-specific point estimates and the
Heterogeneity of the Biological Homeostatic Ratio (HBHR).
}
\examples{
# Create a sample data frame for demonstration
# 3 subjects, 3 time points per subject, 2 replicates per time point
subject_data <- data.frame(
  SubjectID = rep(c("S1", "S2", "S3"), each = 6),
  Value = c(
    rnorm(2, 100, 10), rnorm(2, 105, 10), rnorm(2, 98, 10),  # Subject 1
    rnorm(2, 120, 12), rnorm(2, 118, 12), rnorm(2, 122, 12), # Subject 2
    rnorm(2, 90, 8), rnorm(2, 92, 8), rnorm(2, 88, 8)       # Subject 3
  )
)

# Note: In a real package, the bv_anova function would need to be available.
# The following calls are illustrative of how variance_components would be used.

# Get point estimates of standard deviations (sigmas)
# results_sigma <- variance_components(subject_data, output_type = "sigma")

# Get CVs as percentages with 95\% confidence intervals
# results_cv_ci <- variance_components(
#   subject_data,
#   output_type = "cv_ci",
#   mult = 100,
#   level = 0.95
# )

# print(results_sigma)
# print(results_cv_ci)
}
